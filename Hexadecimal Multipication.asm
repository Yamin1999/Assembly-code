;INPUT TWO HEXADECIMAL NUMBER AND MULTIPLY THEM
;OUTPUT SHOULD BE IN BINARY AND ALSO IN HEXADECIMAL


INCLUDE "EMU8086.INC"
.MODEL SMALL
.STACK 100H
.DATA

NUM1 DW 0
NUM2 DW 0
NUM3 DW 0

.CODE
MAIN PROC 
    

    
MOV AX,@DATA     ;GET DATA SEGMENT
MOV DS,AX        ;INITIALIZE DS 

MOV CL,4         ;COUNTERT FOR 4 SHIFTS
XOR BX,BX        ;CLEAR BX

PRINT 'ENTER 1ST HEX NUM:  '
WHILE:
MOV AH,1         ;INPUT CHARECTER FUNCTION
INT 21H          ;INPUT A CHARECTER
CMP AL,0DH       ;CARRY RETURN
JE END_WHILE     ;YES! EXIT

;CONVERT CHARECTER TO BINARY VALUE

CMP AL,58        
JG LETTER        ;A LETTER
JLE NUMBER       ;A DIGIT


NUMBER:

AND AL,0FH       ;CONVERT DIGIT TO BINARY VALUE
JMP SHIFT        ;GO TO INSERT IN BX


LETTER:
SUB AL,37H       ;CONVERT LETTER TO BINARY VALUE
JMP SHIFT

SHIFT:

SHL BX,CL        ;MAKE ROOM FOR NEW VALUE 

;INSERT VALUE IN INTO BX
OR BL,AL         
JMP WHILE

END_WHILE: 

MOV NUM1,BX       ;STORE BX VALUE IN NUM1


PRINTN
PRINT 'ENTER 2ND HEX NUM:  '

XOR BX,BX         ;CLEAR BX


WHILE1:
MOV AH,1          ;INPUT CHARECTER FUNCTION
INT 21H           ;INPUT A CHARECTER
CMP AL,0DH        ;CARRY RETURN
JE END_WHILE1     ;YES! EXIT 

;CONVERT CHARECTER TO BINARY VALUE
CMP AL,58
JG LETTER1        ;A LETTER
JLE NUMBER1       ;A DIGIT


NUMBER1:

AND AL,0FH        ;CONVERT DIGIT TO BINARY VALUE
JMP SHIFT1        ;GO TO INSERT IN BX


LETTER1:
SUB AL,37H        ;CONVERT LETTER TO BINARY VALUE
JMP SHIFT1

SHIFT1:

SHL BX,CL         ;MAKE ROOM FOR NEW VALUE  

;INSERT VALUE IN INTO BX
OR BL,AL
JMP WHILE1

END_WHILE1: 

mov AX,NUM1        ;STORE BX VALUE IN NUM1

XOR DX,DX          ;CLEAR DX
 
;MULTIPICATION
LOOP4:
CMP AX,0
JE END_LOOP4
SHR AX,1
JNC CHECK
ADD DX,BX
CHECK:
SHL BX,1
JMP LOOP4

END_LOOP4:

MOV BX,DX 

MOV NUM2,BX
PRINTN

MOV CX,16
LOOP1:
SHL BX,1
JC ENDF

PRINT '0' 
JMP ENDK

ENDF:

PRINT '1' 
ENDK:

LOOP LOOP1 

MOV BX,NUM2


PRINTN

MOV CX,4
XOR DX,DX


LOOP3:

MOV DL,BH
SHR DL,4

CMP DL,9
JLE NUMBER3

CMP DL,15
JLE LETTER3

NUMBER3:
ADD DL,48
MOV AH,2
INT 21H
JMP CLEAR

LETTER3:
ADD DL,55
MOV AH,2
INT 21H
JMP CLEAR

CLEAR:
ROL BX,4

LOOP LOOP3



EXIT:
MOV AX,4CH
INT 21H
MAIN ENDP
END MAIN





